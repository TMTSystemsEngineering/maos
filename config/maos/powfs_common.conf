#FILE powfs_common.conf
#Gather options regarding WFS that are not specific to a certain telescope or AO implementation. The values are determined from best practice regarding SHWFS. Specific AO instrument may choose to override the values permanently or temporarily for testing purpose.

#The same value applies to LGS, NGS High, or NGS lo order WFS.
#Most entry has only one number that will be duplicated for different powfs types.
powfs.moao     = [-1] #index into moao config. -1 mean no moao.
#Used for wavefront reconstruction 
powfs.ncpa_method=[2]#Method to correct ncpa; 0: do nothing. 1: apply gradient offset. 2: apply bias when computing i0, should be more accurate than 1. 
powfs.type      = [0]  #0: SHWFS, 1:Pyramid WFS
#Entries here belong to PyWFS only
powfs.modulate  = [1]  #Pyramid WFS modulation diameter in arcsecond
powfs.fov	= [2]  #Pyramid WFS FoV.	
#ALl entries below this only applies to SHWFS
powfs.saloc     = [""]  #load saloc from file for each powfs.
powfs.saat      = [0.3]  #threshold of relative area to turn off subaperture.
powfs.neareconfile=[""] #file contains NEA for each SA. takes precedence. File name takes same format as piinfile. in radian unit. (takes precedance)
powfs.neasim    = [-1] # geometric only: nea in mas for simulation. -1 to match nearecon (not neareconfile).
powfs.neasimfile= [""] # read NEA used in simulation from file. Defined at  sim.dt sampling rate, in radian. neasim must be -1
powfs.neaphy    = [0]  # 1: use nea from matched filter in geometric simulations.

#The following only applies to physical optics SHWFS and are automatically ignored for Other kind of WFS
powfs.phyusenea = [0]  # 1: force use specified nea_recon in reconstruction in physical optics mode.
powfs.neaspeckle= [0]  # additional speckle noise equivalent angle in mas to be added to matched filter estimation of nea.
powfs.radpixtheta=[0]  # CCD Pixel size along radiual direction.
powfs.radgx     = [1]  # Create gx, gy along radial/azimuthal direction.
powfs.fieldstop = [0]  # the field stop in arcsec. Only useful for high order NGS WFS.
powfs.pixblur   = [0.3]# bluring of pixels in unit of pixtheta due to charge diffusion
powfs.radrot  = [0]  #rotate OTF to do radial pixel 0: like laos. 1: rotate OTF. 1 is good for side launch to save memory.
powfs.ncomp   = [0]  #specify FFT grid size in WFS sensor imaging. 0: automatic. 
powfs.pixoffx = [0]  #offset of psf center from pixel vertex.
powfs.pixoffy = [0]  #offset of psf center from pixel vertex.
powfs.i0scale = [0]  #scale sum of averaged image intensity generated using turbulence OTF to match normalized subaperture area. This is used to build matched filter.
powfs.sigscale= [1]  #scale factor from the wfs.siglev to wfs.siglevsim for simulation. to simulate signal variation/mismatch
powfs.bkgrnd  = [0]  #sky background in unit e/pixel/frame at sim.dt.
powfs.bkgrndc = [1]  #background correction factor for powfs.bkgrnd. 1: DC component fully removed.
powfs.bkgrndfn= [""] #sky background/rayleigh backscatter image for each subaperture in each wfs. at sim.dt
powfs.bkgrndfnc=[""] #estimation of bkgrndfn that will be subtracted.
powfs.embfac  = [2]  #embeding factor of complex pupil function to generate subaperture image using FFT method. keep at 2
powfs.psfout  = [0]  #output complex psf core for sky coverage. only valid in split tomography, do ideal compensation of NGS modes.
powfs.pistatout = [0] #output tip/tilt removed averaged psf for later #matched filter input
powfs.pistatstc = [0] #shift pistat to center using fft method.
powfs.pistatstart=[20]#first time step to start output pistat
powfs.piinfile  = [""]#pixel intensities input file prefix. Mainly used for NGS. If seed is 1, and pistatout=[0 1 1], the program outputs pistat_seed1_wfs[678].bin. Put here powfs.piinfile=["" "pistat_see1" "pistat_seed1"] here and set pistatout=[0 0 0] to run physical optics NGS simulation. PSF must be centered.
powfs.sninfile  = [""]#speckle noise. not yet used
powfs.phytype   = [1] #1: matched filter. 2:cog 
powfs.phytypesim= [-1]#physical optics type in simulation. -1 to match phytype
#Advanced options for matched filter
powfs.r0       = [-1] #r0 used for initializing matched filter
powfs.l0       = [-1] #outerscale used for initializing matched filter
powfs.mtchcpl  = [1]  #use coupling between r/a measure error. 0: diagnalize.
powfs.mtchcra  = [-1] #use constraint matched filter for azimuthal. -1: follow mtchcr
powfs.mtchscl  = [-1] #scale subaperture image to have the same intensity as i0. -1: enables when sigscale!=1.
powfs.mtchadp  = [0] #Using adaptive matched filter. Use cr when FWHM>4 pix.
powfs.cogthres = [1] #tCoG threshold, relative to noise
powfs.cogoff   = [1] #tCoG offset to remove, relative to nois
#to model SHWFS subaperture aberration
powfs.safill2d=[1] #fill factor of lenslet, in 2-dimensions. Results in photon loss and larger spot.
powfs.saspherical=[0]  #spherical aberration at best focus of each lenslet in nm RMS.
powfs.safocuspv=[0] #focus error for each subaperture in nm p/v.

#For dithering
powfs.dither   = [0]     #Dithering to update centroid gain or matched filter. 
powfs.dither_amp=[0.1]   #Dithering radius in unit of pixel size.
powfs.dither_pllskip=[20]#Skip frames for uplink to be stable before turning on PLL.
powfs.dither_nskip=[0]   #Skip frames for pll to have the first output before statistics. >=pllskip+npll
powfs.dither_gpll=[0.005]#Gain of PLL. 0.005 is good
powfs.dither_npll=[240]  #Period for updating dithering phase and amplitude
powfs.dither_ndrift=[1]  #Period for updating drift mode computation
powfs.dither_nmtch=[10]  #Period for updating matched filter

#signal level at 800 Hz for fully illuminated subaperture. 
wfs.siglev = [] #if set, powfs.siglev must be set to empty.
#concatenated lists of wavelength weighting.
wfs.wvlwts = [] #if set, powfs.wvlwts must be set to empty.
wfs.fitwt =[0]  #if >0, include this wfs in fitting.
wfs.hs=[-1]     #if <=0, use powfs.hs instead
